version: "3.9"
services:
  #Creates a genesis state for the beacon chain using a YAML configuration file and
  # a deterministic set of 64 validators.
  create-beacon-chain-genesis:
    image: "gcr.io/prysmaticlabs/prysm/cmd/prysmctl:HEAD-ec954e"
    command:
      - testnet
      - generate-genesis
      - --fork=capella
      - --num-validators=64
      #- --genesis-time-delay=15
      - --output-ssz=/consensus/genesis.ssz
      - --chain-config-file=/consensus/config.yml
      - --geth-genesis-json-in=/execution/genesis.json
      - --geth-genesis-json-out=/execution/genesis.json
    volumes:
      - ./consensus:/consensus
      - ./execution:/execution

  # Sets up the genesis configuration for the go-ethereum client from a JSON file.
  geth-genesis:
    image: "ethereum/client-go:latest"
    command: --datadir=/execution init /execution/genesis.json
    volumes:
      - ./execution:/execution
      - ./execution/genesis.json:/execution/genesis.json
    depends_on:
      create-beacon-chain-genesis:
        condition: service_completed_successfully

  # Runs a Prysm beacon chain from a specified genesis state created in the previous step
  # and connects to go-ethereum in the same network as the execution client.
  # The account used in go-ethereum is set as the suggested fee recipient for transactions
  # proposed via the validators attached to the beacon node.
  beacon-chain:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:v4.0.8"
    command:
      - --datadir=/consensus/beacondata
      # No peers to sync with in this testnet, so setting to 0
      - --min-sync-peers=1
      - --genesis-state=/consensus/genesis.ssz
      - --bootstrap-node=
      # - --interop-eth1data-votes
      # The chain configuration file used for setting up Prysm
      - --chain-config-file=/consensus/config.yml
      - --config-file=/consensus/config.yml
      # We specify the chain id used by our execution client
      # - --contract-deployment-block=0
      - --chain-id=32382
      - --rpc-host=0.0.0.0
      - --grpc-gateway-host=0.0.0.0
      - --monitoring-host=0.0.0.0
      - --rpc-port=4001
      - --p2p-tcp-port=13001
      - --p2p-udp-port=12001
      - --grpc-gateway-port=3501
      - --monitoring-port=8001
      - --execution-endpoint=http://geth:8552
      - --accept-terms-of-use
      - --jwt-secret=/execution/jwtsecret
      - --suggested-fee-recipient=c9747e60cd06d9af441218636ea2031578d8e28e
      - --enable-debug-rpc-endpoints
      - --peer=/ip4/172.30.0.3/tcp/13000/p2p/16Uiu2HAm2zcZY34KGRXi2VRD9nxZWZAqdPXnQ5aEGTRVyzx2gRyg
    depends_on:
      create-beacon-chain-genesis:
        condition: service_completed_successfully
    ports:
      - 4001:4001
      - 8001:8001
      - 3501:3501
      # - 6060:6060
      # - 9090:9090
      - 13001:13001
      - 12001:12001
    volumes:
      - ./consensus:/consensus
      - ./execution:/execution
      - ./execution/jwtsecret:/execution/jwtsecret
    networks: 
      - devnet-1x3-one_default

  # Runs the go-ethereum execution client with the specified, unlocked account and necessary
  # APIs to allow for proof-of-stake consensus via Prysm.
  geth:
    image: "ethereum/client-go:latest"
    command:
      - --http
      - --http.api=eth,net,web3,admin
      - --http.addr=0.0.0.0
      - --http.corsdomain=*
      - --ws
      - --ws.api=eth,net,web3,admin
      - --ws.addr=0.0.0.0
      - --ws.origins=*
      - --authrpc.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.jwtsecret=/execution/jwtsecret
      - --datadir=/execution
      - --allow-insecure-unlock
      - --unlock=c9747e60cd06d9af441218636ea2031578d8e28e
      - --password=/execution/geth_password.txt
      - --nodiscover
      - --syncmode=full
      - --authrpc.port=8552
      - --http.port=8547
      - --ws.port=8548
    ports:
      - 8552:8552
      - 8547:8547
      - 8548:8548
    depends_on:
      geth-genesis:
        condition: service_completed_successfully
      beacon-chain:
        condition: service_started
    volumes:
      - ./execution:/execution
      - ./execution/jwtsecret:/execution/jwtsecret
      - ./execution/geth_password.txt:/execution/geth_password.txt
    networks: 
      - devnet-1x3-one_default

  # We run a validator client with 64, deterministically-generated keys that match
  # The validator keys present in the beacon chain genesis state generated a few steps above.
  validator:
    image: "gcr.io/prysmaticlabs/prysm/validator:v4.0.8"
    command:
      - --beacon-rpc-provider=beacon-chain:4001
      - --datadir=/consensus/validatordata
      - --accept-terms-of-use
      - --interop-num-validators=64
      - --interop-start-index=0
      - --chain-config-file=/consensus/config.yml
    depends_on:
      beacon-chain:
        condition: service_started
    volumes:
      - ./consensus:/consensus
    networks: 
      - devnet-1x3-one_default

networks:
  devnet-1x3-one_default:
    external: true